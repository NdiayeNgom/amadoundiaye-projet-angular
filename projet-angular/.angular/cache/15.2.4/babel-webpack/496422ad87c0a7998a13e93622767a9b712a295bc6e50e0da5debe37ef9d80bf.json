{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProgramService {\n  constructor(http) {\n    this.http = http;\n  }\n  list() {\n    return this.http.get(`${environment.apiUrl}/programs/list`);\n  }\n  create(data) {\n    var header = this.getHeader();\n    return this.http.post(`${environment.apiUrl}/programs/create`, data, he);\n  }\n  update(id, data) {\n    return this.http.put(`${environment.apiUrl}/programs/update/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${environment.apiUrl}/programs/delete/${id}`);\n  }\n  getHeader() {\n    return {\n      headers: new HttpHeaders().set('Authorization', `Bearer ${localStorage.getItem('')}`)\n    };\n  }\n}\nProgramService.ɵfac = function ProgramService_Factory(t) {\n  return new (t || ProgramService)(i0.ɵɵinject(i1.HttpClient));\n};\nProgramService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProgramService,\n  factory: ProgramService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,IAAI;IACF,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAGL,WAAW,CAACM,MAAM,gBAAgB,CAAC;EAC7D;EAEAC,MAAM,CAACC,IAAa;IAClB,IAAIC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAGX,WAAW,CAACM,MAAM,kBAAkB,EAAEE,IAAI,EAAEI,EAAE,CAAC;EAC1E;EAEAC,MAAM,CAACC,EAAU,EAAEN,IAAa;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACY,GAAG,CAAC,GAAGf,WAAW,CAACM,MAAM,oBAAoBQ,EAAE,EAAE,EAAEN,IAAI,CAAC;EAC3E;EAEAQ,MAAM,CAACF,EAAU;IACf,OAAO,IAAI,CAACX,IAAI,CAACa,MAAM,CAAC,GAAGhB,WAAW,CAACM,MAAM,oBAAoBQ,EAAE,EAAE,CAAC;EACxE;EAEAJ,SAAS;IACP,OAAM;MACJO,OAAO,EAAE,IAAIlB,WAAW,EAAE,CACzBmB,GAAG,CAAC,eAAe,EAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,EAAE,CAAC,EAAE;KAC5D;EACH;;AA5BWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFb;AAAM","names":["HttpHeaders","environment","ProgramService","constructor","http","list","get","apiUrl","create","data","header","getHeader","post","he","update","id","put","delete","headers","set","localStorage","getItem","factory","providedIn"],"sourceRoot":"","sources":["/Users/amadou/workspace/dev/npm/typescript/projet-angular/src/app/services/program.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Program } from '../program';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgramService {\n\n  programs!: Program[];\n\n  constructor(private http: HttpClient) { }\n\n  list() {\n    return this.http.get(`${environment.apiUrl}/programs/list`);\n  }\n\n  create(data: Program) {\n    var header = this.getHeader();\n    return this.http.post(`${environment.apiUrl}/programs/create`, data, he);\n  }\n\n  update(id: number, data: Program) {\n    return this.http.put(`${environment.apiUrl}/programs/update/${id}`, data);\n  }\n  \n  delete(id: number){\n    return this.http.delete(`${environment.apiUrl}/programs/delete/${id}`);\n  }\n\n  getHeader(){\n    return{\n      headers: new HttpHeaders()\n      .set('Authorization',  `Bearer ${localStorage.getItem('')}`)\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}