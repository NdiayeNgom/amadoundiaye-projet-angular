{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\n//import * as moment from \"moment\";\nexport class LoginComponent {\n  constructor(fb, auth, route) {\n    this.fb = fb;\n    this.auth = auth;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    this.auth.login(this.loginForm.value.email, this.loginForm.value.password).subscribe(res => {\n      const helper = new JwtHelperService();\n      const decodedToken = helper.decodeToken(res.accessToken);\n      console.log(decodedToken);\n      localStorage.setItem('id_token', res.accessToken);\n      localStorage.setItem('user_info', JSON.stringify());\n      //localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n      //this.route.navigate(['/programs']);\n    }, error => {\n      console.error(error);\n    });\n    console.log(this.loginForm.value);\n  }\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"text\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\")(4, \"input\", 2)(5, \"br\");\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\")(9, \"input\", 4)(10, \"br\");\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵtext(12, \"Se connecter\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,gBAAgB;AAI3C,SAASC,gBAAgB,QAAQ,oBAAoB;;;;;AACrD;AAOA,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAe,EAAUC,IAAiB,EAAUC,KAAa;IAAjE,OAAE,GAAFF,EAAE;IAAuB,SAAI,GAAJC,IAAI;IAAuB,UAAK,GAALC,KAAK;EAAY;EAEzFC,QAAQ;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KAEnC,CAAC;EACN;EAEAE,KAAK;IACF,IAAI,CAACR,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACL,SAAS,CAACM,KAAK,CAACJ,KAAK,EAAE,IAAI,CAACF,SAAS,CAACM,KAAK,CAACF,QAAQ,CAAC,CAACG,SAAS,CAClFC,GAAO,IAAI;MACV,MAAMC,MAAM,GAAG,IAAIhB,gBAAgB,EAAE;MACrC,MAAMiB,YAAY,GAAGD,MAAM,CAACE,WAAW,CAACH,GAAG,CAACI,WAAW,CAAC;MAExDC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;MACzBK,YAAY,CAACC,OAAO,CAAC,UAAU,EAAER,GAAG,CAACI,WAAW,CAAC;MACjDG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,EAAE,CAAC;MACnD;MAEA;IACF,CAAC,EACAC,KAAK,IAAI;MAAGN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IAAE,CAAC,CACrC;IACDN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,SAAS,CAACM,KAAK,CAAC;EACnC;EAEAc,MAAM;IACJL,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;IACnCN,YAAY,CAACM,UAAU,CAAC,YAAY,CAAC;EACvC;;AAlCW3B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BC,+BAAmD;MAArBA;QAAA,OAAYC,WAAO;MAAA,EAAC;MAEhDD,gCAAmB;MAAAA,sBAAM;MAAAA,iBAAQ;MAAAA,qBAAI;MAGrCA,gCAAsB;MAAAA,4BAAY;MAAAA,iBAAQ;MAAAA,qBAAI;MAG9CA,kCAAoD;MAAAA,6BAAY;MAAAA,iBAAS;;;MARrEA,yCAAuB;MAQLA,gBAA6B;MAA7BA,+CAA6B","names":["Validators","JwtHelperService","LoginComponent","constructor","fb","auth","route","ngOnInit","loginForm","group","email","required","password","login","value","subscribe","res","helper","decodedToken","decodeToken","accessToken","console","log","localStorage","setItem","JSON","stringify","error","logout","removeItem","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/amadou/workspace/dev/npm/typescript/projet-angular/src/app/login/login.component.ts","/Users/amadou/workspace/dev/npm/typescript/projet-angular/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { FormArray } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n//import * as moment from \"moment\";\n@Component({\n  selector: 'app-login', \n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit{\n  loginForm!: FormGroup ;\n\n  constructor(private fb: FormBuilder, private auth: AuthService, private route: Router) { }\n\n  ngOnInit() {\n      this.loginForm = this.fb.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n        \n      });\n  }\n\n  login(){\n     this.auth.login(this.loginForm.value.email, this.loginForm.value.password).subscribe(\n      (res:any) => { \n        const helper = new JwtHelperService();\n        const decodedToken = helper.decodeToken(res.accessToken);\n\n        console.log(decodedToken); \n        localStorage.setItem('id_token', res.accessToken);\n        localStorage.setItem('user_info', JSON.stringify());\n        //localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n\n        //this.route.navigate(['/programs']);\n      },\n      (error) => { console.error(error); }\n    );\n    console.log(this.loginForm.value);\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n  }\n}\n","\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\n  <label for=\"email\">E-mail</label><br>\n  <input id=\"email\" type=\"text\" formControlName=\"email\" required><br>\n\n  <label for=\"password\">Mot de passe</label><br>\n  <input id=\"password\" type=\"text\" formControlName=\"password\" required><br>\n\n  <button type=\"submit\" [disabled]=\"!loginForm.valid\">Se connecter</button>\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}