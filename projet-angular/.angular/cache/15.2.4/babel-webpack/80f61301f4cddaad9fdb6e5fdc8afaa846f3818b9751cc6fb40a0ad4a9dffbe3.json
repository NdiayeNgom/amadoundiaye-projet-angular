{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\n//import * as moment from \"moment\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, auth, route) {\n      this.fb = fb;\n      this.auth = auth;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    login() {\n      this.auth.login(this.loginForm.value.email, this.loginForm.value.password).subscribe(res => {\n        const helper = new JwtHelperService();\n        const decodedToken = helper.decodeToken(res.accessToken);\n        console.log(decodedToken);\n        localStorage.setItem('id_token', res.accessToken);\n        localStorage.setItem('user_info', JSON.stringify(decodedToken));\n        //localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n        //this.route.navigate(['/programs']);\n      }, error => {\n        console.error(error);\n      });\n      console.log(this.loginForm.value);\n    }\n    logout() {\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"text\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"br\")(4, \"input\", 2)(5, \"br\");\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\")(9, \"input\", 4)(10, \"br\");\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12, \"Se connecter\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}